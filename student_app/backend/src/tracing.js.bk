import { NodeSDK } from '@opentelemetry/sdk-node';
import { getNodeAutoInstrumentations } from '@opentelemetry/auto-instrumentations-node';
import { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-grpc';
import { diag, DiagConsoleLogger, DiagLogLevel } from '@opentelemetry/api';

// Enable debugging if needed
diag.setLogger(new DiagConsoleLogger(), DiagLogLevel.INFO);

// Set your SigNoz server details
const SIGNOZ_ENDPOINT = process.env.OTLP_ENDPOINT || "grpc://your-signoz-server.com:4317"; // Use correct gRPC URL

// Create OTLP gRPC Exporter (No headers needed for gRPC)
const traceExporter = new OTLPTraceExporter({
  url: SIGNOZ_ENDPOINT, 
});

const sdk = new NodeSDK({
  traceExporter,
  instrumentations: [getNodeAutoInstrumentations()], // Ensure all auto-instrumentations are applied
});

// Start OpenTelemetry
(async () => {
  try {
    await sdk.start();
    console.log("Tracing initialized successfully ✅");
  } catch (error) {
    console.error("Error initializing tracing ❌", error);
  }
})();

// Graceful shutdown
process.on('SIGTERM', async () => {
  try {
    await sdk.shutdown();
    console.log('Tracing terminated gracefully ✅');
    process.exit(0);
  } catch (error) {
    console.error('Error shutting down tracing ❌', error);
    process.exit(1);
  }
});
